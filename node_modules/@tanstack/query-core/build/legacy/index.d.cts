export { K as AnyDataTag, b2 as CancelOptions, C as CancelledError, L as DataTag, B as DefaultError, b1 as DefaultOptions, ag as DefaultedInfiniteQueryObserverOptions, ae as DefaultedQueryObserverOptions, aL as DefinedInfiniteQueryObserverResult, aC as DefinedQueryObserverResult, D as DehydrateOptions, y as DehydratedState, z as DistributiveOmit, X as Enabled, aj as EnsureInfiniteQueryDataOptions, ai as EnsureQueryDataOptions, ak as FetchInfiniteQueryOptions, ar as FetchNextPageOptions, as as FetchPreviousPageOptions, ah as FetchQueryOptions, au as FetchStatus, a3 as GetNextPageParamFunction, a2 as GetPreviousPageParamFunction, H as HydrateOptions, P as InferDataFromTag, T as InferErrorFromTag, a4 as InfiniteData, aE as InfiniteQueryObserverBaseResult, aH as InfiniteQueryObserverLoadingErrorResult, aG as InfiniteQueryObserverLoadingResult, af as InfiniteQueryObserverOptions, aF as InfiniteQueryObserverPendingResult, aK as InfiniteQueryObserverPlaceholderResult, aI as InfiniteQueryObserverRefetchErrorResult, aM as InfiniteQueryObserverResult, aJ as InfiniteQueryObserverSuccessResult, aa as InfiniteQueryPageParamsOptions, _ as InitialDataFunction, a9 as InitialPageParam, ap as InvalidateOptions, an as InvalidateQueryFilters, aV as MutateFunction, aU as MutateOptions, x as Mutation, M as MutationCache, d as MutationCacheNotifyEvent, j as MutationFilters, aR as MutationFunction, aN as MutationKey, aQ as MutationMeta, e as MutationObserver, aW as MutationObserverBaseResult, aZ as MutationObserverErrorResult, aX as MutationObserverIdleResult, aY as MutationObserverLoadingResult, aT as MutationObserverOptions, a$ as MutationObserverResult, a_ as MutationObserverSuccessResult, aS as MutationOptions, aP as MutationScope, w as MutationState, aO as MutationStatus, a6 as NetworkMode, N as NoInfer, b5 as NotifyEvent, b4 as NotifyEventType, a7 as NotifyOnChangeProps, O as OmitKeyof, A as Override, $ as PlaceholderDataFunction, a0 as QueriesPlaceholderDataFunction, v as Query, Q as QueryCache, a as QueryCacheNotifyEvent, b as QueryClient, b0 as QueryClientConfig, l as QueryFilters, V as QueryFunction, Z as QueryFunctionContext, E as QueryKey, a1 as QueryKeyHashFunction, a5 as QueryMeta, c as QueryObserver, av as QueryObserverBaseResult, ay as QueryObserverLoadingErrorResult, ax as QueryObserverLoadingResult, ac as QueryObserverOptions, aw as QueryObserverPendingResult, aB as QueryObserverPlaceholderResult, az as QueryObserverRefetchErrorResult, aD as QueryObserverResult, aA as QueryObserverSuccessResult, a8 as QueryOptions, Y as QueryPersister, u as QueryState, at as QueryStatus, am as RefetchOptions, ao as RefetchQueryFilters, R as Register, aq as ResetOptions, al as ResultOptions, b3 as SetDataOptions, S as SkipToken, W as StaleTime, ab as ThrowOnError, J as UnsetMarker, U as Updater, ad as WithRequired, G as dataTagErrorSymbol, F as dataTagSymbol, t as defaultShouldDehydrateMutation, q as defaultShouldDehydrateQuery, o as dehydrate, h as hashKey, p as hydrate, n as isCancelledError, i as isServer, k as keepPreviousData, f as matchMutation, m as matchQuery, r as replaceEqualDeep, g as shouldThrowError, s as skipToken, I as unsetMarker } from './hydration-DOK63YV3.cjs';
export { QueriesObserver, QueriesObserverOptions } from './queriesObserver.cjs';
export { InfiniteQueryObserver } from './infiniteQueryObserver.cjs';
export { defaultScheduler, notifyManager } from './notifyManager.cjs';
export { focusManager } from './focusManager.cjs';
export { onlineManager } from './onlineManager.cjs';
export { streamedQuery as experimental_streamedQuery } from './streamedQuery.cjs';
import './removable.cjs';
import './subscribable.cjs';
